---
name: Preview Publish on Label
on:
  pull_request_target:
    types:
      - labeled
jobs:
  create-status-comment:
    uses: ./.github/workflows/preview-publish-package-00-create-status-comment.yml
    secrets: inherit
    with:
      prRef: ${{ github.event.pull_request.head.ref }}

  preview-publish-package:
    needs: [create-status-comment]
    uses: ./.github/workflows/preview-publish-package-01-publish-prerelease.yml
    secrets: inherit
    with:
      prRef: ${{ github.event.pull_request.head.ref }}

  update-status-comment-on-succes:
    needs: [create-status-comment, preview-publish-package]
    name: Update status pre-release comment on success
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: Read artifacts
        run: |
          echo "comment_id=$(cat ./comment-artifact/comment_id.txt)" >> $GITHUB_ENV
          echo "changelog=$(cat ./changelog-artifact/changelog.txt)" >> $GITHUB_ENV

      - name: Update status comment
        uses: actions/github-script@v7
        with:
          script: |
            const comment_id = ${{ env.comment_id }}
            const changelogString = '${{ env.changelog }}';
            const changelog = changelogString.length > 0 ? changelogJson?.map(c => `${c.name}@${c.version}`).join('\\n') : null;
            
            if(!changelog){
              github.rest.issues.updateComment({
                ...context.repo,
                comment_id: comment_id,
                body: `> [!NOTE]
            > Pre-Release skipped. 
            
            No changes were made.
                `
              });
            
              return;
            }
            
            github.rest.issues.updateComment({
              ...context.repo,
              comment_id: comment_id,
              body: `> [!TIP]
              > Pre-Release created
            
              The pre-release has been successfully created for the following packages:
              \`\`\`
              ${changelog}
              \`\`\`
              You can now check out the latest version.
              `
            });

  remove-preview-publish-label:
    needs: [ create-status-comment ]
    name: Remove preview-publish label
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Remove preview-publish label
        uses: actions/github-script@v7
        with:
          script: |
            const labelToRemove = 'preview-publish'
            
            // Check if the PR already has the label
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const hasLabel = labels.some(label => label.name === labelToRemove);
            
            if(!hasLabel) return;
            
            github.rest.issues.removeLabel({
              ...context.repo,
              issue_number: context.issue.number,
              name: [labelToRemove]
            });

  update-status-comment-on-failure:
    needs: [create-status-comment]
    if: failure()
    name: Update status pre-release comment on failure
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: Read artifacts
        run: |
          echo "comment_id=$(cat ./comment-artifact/comment_id.txt)" >> $GITHUB_ENV

      - name: Update status comment on failure
        uses: actions/github-script@v7
        with:
          script: |
            const comment_id = ${{ env.comment_id }}
            
            github.rest.issues.updateComment({
              ...context.repo,
              comment_id: comment_id,
              body: `
            > [!CAUTION]
            > Pre-Release failed
              `
            });