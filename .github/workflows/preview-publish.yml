name: Preview Publish on Label

on:
  pull_request:
    types: [labeled]

jobs:
  preview-publish:
    if: contains(github.event.pull_request.labels.*.name, 'preview-publish')
    name: Publish Prerelease to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Create initial comment
        uses: actions/github-script@v7
        id: initial_comment
        with:
          script: |
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `ðŸš§ Pre-Release Process Initiated ðŸš§
            
              The pre-release is currently being created. No action is required on your part; this comment will automatically update once everything is complete.
              `
            }).then(response => {
              core.setOutput("comment_id", response.data.id)
            });
          outputs: ${{ steps.initial_comment.outputs.comment_id }}

      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"

      - name: "GitHub Package Registry Identity"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > .npmrc
          echo "@exile-watch:registry=https://npm.pkg.github.com/" >> .npmrc

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Lerna publish prerelease
        id: lerna_publish
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          output=$(npx lerna version prerelease --preid preview --yes --no-push && npx lerna publish from-git --dist-tag next --yes)
          echo "publish_output=$output" >> $GITHUB_OUTPUT # Use the new syntax to set the output

      - name: Update the comment
        if: success() && steps.lerna_publish.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            console.log(steps.initial_comment.outputs)
            console.log(steps.lerna_publish.outputs)
            const comment_id = ${{ steps.initial_comment.outputs }};
            github.rest.issues.updateComment({
              ...context.repo,
              comment_id: comment_id,
              body: `ðŸŒŸ Pre-Release Created ðŸŒŸ
              
              The pre-release has been successfully created with the following details:
              \`\`\`
      #              ${lernaOutput}
              \`\`\`
              You can now check out the latest version.
              `
            });