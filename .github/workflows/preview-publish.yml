---
name: Preview Publish on Label
on:
  pull_request_target:
    types:
      - labeled
jobs:
  create-initial-comment:
    name: Create initial pre-release comment
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'preview-publish') }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Create initial comment
        uses: actions/github-script@v7
        id: initial_comment
        with:
          script: >
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body: `> [!WARNING]
              > ðŸš§ Pre-Release process initiated ðŸš§.
                     
              The pre-release is currently being created. No action is required on your part; this comment will automatically update once everything is complete.
              `
            }).then(response => {
              core.setOutput("comment_id", response.data.id)
            });
    outputs:
      comment_id: ${{ steps.initial_comment.outputs.comment_id }}

  preview-publish:
    needs: [create-initial-comment]
    name: Publish Prerelease to NPM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
      - name: Configure Git
        run: |
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
      - name: GitHub Package Registry Identity
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" > .npmrc
          echo "@exile-watch:registry=https://npm.pkg.github.com/" >> .npmrc
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

      - name: Lerna publish prerelease
        id: lerna_prerelease
        env:
          CI: true
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx lerna version prerelease --preid preview --yes --no-push
          npx lerna publish from-git --dist-tag next --yes
          echo "changelog=$(npx lerna changed --json | tr '\n' ' ')" >> $GITHUB_OUTPUT
    outputs:
      changelog: ${{ steps.lerna_prerelease.outputs.changelog }}

  update-initial-comment:
    needs: [create-initial-comment, preview-publish]
    name: Update initial pre-release comment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Update initial comment
        uses: actions/github-script@v7
        id: initial_comment
        with:
          script: |
            const comment_id = ${{ needs.create-initial-comment.outputs.comment_id }}
            const changelogString = '${{ needs.preview-publish.outputs.changelog }}';
            const changelog = changelogString.length > 0 ? changelogJson?.map(c => `${c.name}@${c.version}`).join('\\n') : null;
            
            if(!changelog){
              github.rest.issues.updateComment({
                ...context.repo,
                comment_id: comment_id,
                body: `> [!NOTE]
                > Pre-Release skipped. 
            
                No changes were made.
                `
              });
            
              return;
            }
            github.rest.issues.updateComment({
              ...context.repo,
              comment_id: comment_id,
              body: `ðŸŒŸ Pre-Release Created ðŸŒŸ
            
              The pre-release has been successfully created with the following details:
              \`\`\`
              ${changelog}
              \`\`\`
              You can now check out the latest version.
              `
            });